// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NFTudio.Api.Data;

#nullable disable

namespace NFTudio.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250507152608_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("NFTudio.Core.Models.Associate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssociateImagemUrl")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Benefit")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Associates", (string)null);
                });

            modelBuilder.Entity("NFTudio.Core.Models.AssociateOperation", b =>
                {
                    b.Property<long>("AssociateId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OperationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssociateId", "OperationId");

                    b.HasIndex("OperationId");

                    b.ToTable("AssociateOperations", (string)null);
                });

            modelBuilder.Entity("NFTudio.Core.Models.Link", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AssociateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssociateId");

                    b.ToTable("Links", (string)null);
                });

            modelBuilder.Entity("NFTudio.Core.Models.Operation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Operations", (string)null);
                });

            modelBuilder.Entity("NFTudio.Core.Models.AssociateOperation", b =>
                {
                    b.HasOne("NFTudio.Core.Models.Associate", "Associate")
                        .WithMany("AssociateOperations")
                        .HasForeignKey("AssociateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NFTudio.Core.Models.Operation", "Operation")
                        .WithMany("AssociateOperations")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associate");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("NFTudio.Core.Models.Link", b =>
                {
                    b.HasOne("NFTudio.Core.Models.Associate", "Associate")
                        .WithMany("Links")
                        .HasForeignKey("AssociateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Associate");
                });

            modelBuilder.Entity("NFTudio.Core.Models.Associate", b =>
                {
                    b.Navigation("AssociateOperations");

                    b.Navigation("Links");
                });

            modelBuilder.Entity("NFTudio.Core.Models.Operation", b =>
                {
                    b.Navigation("AssociateOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
